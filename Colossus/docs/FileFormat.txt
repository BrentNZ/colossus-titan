/* $Header$ */

This file document file formats for the various datafile used
by Colossus. In all these files, comments start with
a "#" and extend to the end-of-line.

All files, and the two subdirectory 'Battlelands' and 'images'
should be in the same directory (except for the default files,
whose subdirectories are at the root of the Colossus package,
but that shouldn't concern you :-)

1) MAP file format (default file used: Default/Default.map)

This file define the Colossus Masterboard ; what terrain type to use
for an hex and what sort of exit to which hex. It's composed
first of a pair of integer represanting the map size
(horizontaly then vertically), and then
of a succession of line:

<case_label> <case_type>
 <exit_1_label> <exit_1_type>
 <exit_2_label> <exit_2_type>
 <exit_3_label> <exit_3_type>
 <X_pos> <Y_pos>

All of those should be on one line.

<case_label> is the numeric label of the Hex.
<case_type> is the letter of the terrain type of the hex
 (same as in the TER file)
<exit_N_label> are numeric labels for exits 1-3,
 or 0 for no (second, third) exit
<exit_N_type> is the type of exits (ARROW, ARROWS, ARCH, BLOCK) ;
 for exit of label '0' (no exit) any of the four value can be
 used, as exit type is irrelevant.
<X_pos> and <Y_pos> is the position X,Y of the Hex on the
 masterboard. They both start from 'zero', on the first line
 and first column. Not all lines are different (i.e. on the default
 master board, case 126 and 125 are on the same line number 0
and on columns 4 and 3).

WARNING: The way the Hex are displayed (pointy part upside or
downside) depend on the parity of the X+Y sum. It is possible
to create a perfectly legit MAP where all the Hex are upside-down !
Should this happen, the only way fo tix this 'feature' currently,
is to move everything one column right _or_ one row down, i.e.,
force the reversal of the parity. Sorry about that, the problem
hasn't yet been solved.

2) TER file format (default file used: Default/Default.ter)

This file define the Colossus Recruit Trees ; what
can recruit and be recruited on what terrain. it's composed
of a succession of line:

<terrain_letter> <terrain_color> <terrain_name> (<recruiter_needed> <recruit>)+

<terrain_letter> is the letter internaly used to identify the terrain.
 they must all be different.

<terrain_color> is the color used to display this terrain type,
 see HTMLColor.java for the various available color.

<terrain_name> is the descriptive name of the terrain (Brush, ...)

<recruiter_needed> is the number of lower-rank creature needed
 to recruit the next creature.

<recruit> is the name of the recruit creature (Gargoyle, ...)

The last two as a pair can be repeated any number of time.
Any later creature can recruit a previous one or itself.
A creature can recruit the next one only if they are numerous
enough, as indicated by the <recruiter_needed> _of the recruit_.

Too special name exist (pseudo-creature) : "Anything", which
means any creature can recruit the following creature provided
thay are numerous enough, and "Lord"  which means a Lord (Angel,
Titan, Archangel...) can recruit the following creature.
Note that for "Lord" and "Titan", only one recruiter
is needed, and the number before the recruits indicate
how many of the creatures _before_ Lord or Titan are
needed.

When <recruiter_needed> is 0 (zero), then the creature can
recruit, but cannot be recruited. Such creature, and the
pseudo-creature above, are ignored for the purpose of
normal recruitements. If you put 'Titan' as a recruiter,
it should _always_ be zero, as beeing able to recruit
Titan is going to cause lots of trouble.

exemple: if you use "0 Anything 3 ogre 0 Titan 2 Gargoyle",
you will be able to recruit an Ogre with any 3 creatures
or with a Gargoyle, and you will be able to recruits
a gargoyle with two Ogres or the Titan. You won't be
able to recruit "Anything" or "Titan", of course;

The line that starts with 'T' and of name 'Tower' (mandatory) is
different. It should contain 5 pairs, all with '1' as the
<recruiter_needed> except for the next-to-last that should be '3'.
First three are 'anything  can recruit' creature, 4the fourth is
'anything numerous enough can recruit', the fifth and last is 'Titan
can recruit'. First three will also be used as the starting
creatures (starting legion will get 2 of each).

Note: for the guardian or the guardian replacement, any value
other than '3' will _not_ work.

3) CRE file format (default file used: Default/Default.cre)

This file define the Colossus Creatures ; it's composed
of a succession of lines:

<name> <power> <skill>
<rangestrikes> <flies>
<nativeBramble> <nativeDrift> <nativeBog> <nativeSandDune> <nativeSlope>
<nativeVolcano> <waterDwelling> <magicMissile>
<lord> <demilord>
<maxCount>
<pluralName>

all on one line.

<name> is the display name of the creature

<power> and <skill> are the numeric value of power and skill respectively.
<rangestrikes> <and flies> are boolean values ('true' or 'false'),
 defining if the creature can rangestrike or fly respectively.
<nativeXXX> are boolean values defining if the creature is
 native for terrain type XXX.
<waterDwelling> is a boolean value defining if the creature
 can live in water (i.e., Bog or Lake). Water Dweller don't
 like being dry, and as such take damage in Sand as other
 Creatures do in Drift.
<magicMissile> is a boolean value defining if the creature
 use magic missile, i.e. it can fires through anything
 (foe, obstacle, ...) toward anyone (including lord).
<lord> and <demilord> are boolean values, defining if the creature
 is a lord or a demilord (mutually exclusive).
<maxCount> is the max number of creature in the caretaker stack.
<pluralName> is the same as name, just plural.

4) Battleland file format (files used: by terrain name under Battlelands)

These files define the Colossus Battlelands. they're composed
of a succession of lines:

<X_pos> <Y_pos> <terrain_type> <terrain_elevation> (<border_number> <border_type>)*

all on one line.

Any cas not mentioned in this file is assumed to be of type 'p',
at elevation '0', and no border.

<X_pos> and <Y_pos> are the X and Y position of the modified case.

<terrain_type> is the terrain type of the case ; it's currently
one of: p, r, s, t, o, v, d, w, l (Plain, bRamble, Sand, Tree, bOg, Volcano, Drift, toWer, Lake)

<terrain_elevation> is the altitude of the terrain (between 0 and 2)

finally. between 0 and 6 pair of the form <border_number> <border_type>,
where <border_number> is between 0 and 5 and <bordet_type> is currently
one of: d, c, s, w (Dune, Cliff, Slope, Wall).

5) VAR file format (default file used: Default/Default.var)

This file contains a variant definition, i.e. which
MAP, CRE and TER file should be used.

Three different lines can exist, in any number and order
(the last one of each type is used):

CRE:<cre_filename>
MAP:<map_filename>
TER:<ter_filename>

6) Images files under "images"

# Chit (i.e. images representing a Creature) should be non-transparent
GIF file, size 60 * 60 (other size may work but won't look as nice). 
They should be named after the Creature they represent, with a '.gif'
extension. If the files doesn't exist, troubles may occur.

Two version of the file should be supplied, one with and one without
the '_i' postfix to the name (i.e 'MyCreature.gif' and 'MyCreature_i.gif').
The first is used for upside-up Creature, the second for upside-down
Creature.

# Graphical Overlay for the Hexes on the Masterboard should be
transparent GIF file, of size whatever-you-want (they are resized
to the same size as the Hex the represent). Default supplied
files are 255x255. Use them as examples of what is possible to do.
If the file doesn't exist, the non-overlayed display is used
instead (i.e. name of the terrain and the label in the proper
corner).

Two version of the file should be supplied, one with and one without
the '_i' postfix to the name (i.e 'MyTerrain.gif' and 'MyTerrain_i.gif').
The first is used when the biggest part of the hexagon is down,
the second when the biggest part is up.

# Graphical overlay for the Hexes on the Battlelands (aka
Hazard) should be transparent GIF file, of size 216x188
for the interior of the hexes (Bog, Sand...), and size 248x220
for the hexsides (Cliff, Slope...). The filename should the name
of the hazard followed by '_Hazard', followed by the extension
'.gif' (for instance "MySea_Hazard.gif"). Omly one version
is needed.
