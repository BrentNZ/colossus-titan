/* $Header$ */

This file document file formats for the various datafile used
by Colossus. In all these files, comments start with
a "#" and extend to the end-of-line.

All files, and the two subdirectory 'Battlelands' and 'images'
should be in the same directory. Default files live in
'Default', 'Default/images' and 'Default/Battelands'.

1) MAP file format (default file used: Default/Default.map)

This file define the Colossus Masterboard ; what terrain type to use
for an hex and what sort of exit to which hex. It's composed
first of a pair of integer represanting the map size
(horizontaly then vertically), and then
of a succession of line:

<case_label> <case_type>
 <exit_1_label> <exit_1_type>
 <exit_2_label> <exit_2_type>
 <exit_3_label> <exit_3_type>
 <X_pos> <Y_pos>

All of those should be on one line.

<case_label> is the numeric label of the Hex.
<case_type> is the letter of the terrain type of the hex
 (same as in the TER file)
<exit_N_label> are numeric labels for exits 1-3,
 or 0 for no (second, third) exit
<exit_N_type> is the type of exits (ARROW, ARROWS, ARCH, BLOCK) ;
 for exit of label '0' (no exit) any of the four value can be
 used, as exit type is irrelevant.
<X_pos> and <Y_pos> is the position X,Y of the Hex on the
 masterboard. They both start from 'zero', on the first line
 and first column. Not all lines are different (i.e. on the default
 master board, case 126 and 125 are on the same line number 0
and on columns 4 and 3).

NOTE: Put at least 6 towers currently, as having less Towers than
players is going to cause problems. The upper number is not
constrained (or isn't supposed to be), and neither are the labels.
For readability reasons, it's probably better to use 100 to 900
as the labels for the first 9 towers.

WARNING: The way the Hex are displayed (pointy part upside or
downside) depend on the parity of the X+Y sum. It is possible
to create a perfectly legit MAP where all the Hex are upside-down !
Should this happen, the only way to fix this 'feature' currently,
is to move everything one column right _or_ one row down, i.e.,
force the reversal of the parity. Sorry about that, the problem
hasn't yet been solved.

2) TER file format (default file used: Default/Default.ter)

This file define the Colossus Recruit Trees ; what
can recruit and be recruited on what terrain. it's composed
of a succession of line of two different kind.

# The first kind is:

<terrain_letter> <terrain_color> <terrain_name> <regular_recruit> (<recruiter_needed> <recruit>)+ <terrain_display_name>?

<terrain_letter> is the letter internaly used to identify the terrain.
 they must all be different.

<terrain_color> is the color used to display this terrain type,
 see HTMLColor.java for the various available color.

<terrain_name> is the descriptive name of the terrain (Brush, ...) ;
 it is used also as the Battlelands file name. If <terrain_display_name>
 is not present, it is also used as the display name.

<regular_recruit>> is a boolean (i.e. true or false) telling if
a Creature can recruit below or above its rank (usually true
except for Tower).

<recruiter_needed> is the number of lower-rank creature needed
 to recruit the next creature.

<recruit> is the name of the recruit creature (Gargoyle, ...)

<terrain_display_name> is an optional string, used to display
 the name of the terrain on the MasterBoard, and as the name
 of the overlay file (see "Images files" below). If absent,
 <terrain_name> is used instead.

The last two as a pair can be repeated any number of time.
Any later creature can recruit a previous one or itself.
A creature can recruit the next one only if they are numerous
enough, as indicated by the <recruiter_needed> _of the recruit_.

Three specials names exist (pseudo-creature) : "Anything", which
means any creature can recruit the following creature provided
thay are numerous enough, "AnyNonLord" which is the same but
excludes Immortal (Lord or DemiLord) from the possible recruiters
and "Lord"  which means a Lord (Angel, Titan, Archangel, etc., but
not a DemiLord) can recruit the following creature.

Note that for "Lord" and "Titan", only one recruiter
is needed, and the number before the recruits indicate
how many of the creatures _before_ Lord or Titan are
needed.

When <recruiter_needed> is 0 (zero), then the creature
can be recruited, but the recruiter will remain anonymous.
This is useful only if the recruiter is 'Anything' or
'AnyNonLord', of course. Don't use with a regular recruiter.

When <recruiter_needed> is -1 (minus one), then the creature can
recruit, but cannot be recruited. Such creature, and the
pseudo-creature above, are ignored for the purpose of
normal recruitements. If you put 'Titan' as a recruiter,
it should _always_ be -1, as beeing able to recruit
Titan is going to cause lots of trouble.

exemple: if you use "0 Anything 3 ogre 0 Titan 2 Gargoyle",
you will be able to recruit an Ogre with any 3 creatures
or with a Gargoyle, and you will be able to recruits
a gargoyle with two Ogres or the Titan. You won't be
able to recruit "Anything" or "Titan", of course.

The line that starts with 'T' and of name 'Tower' (mandatory) is
special. There should always be at least 3 regular creatures,
recruitable with zero of Anything, and should be marked
as 'non-regular' recruitments. The 3 creatures will be used
as starting creatures.

# The second kind is:

ACQUIRABLE <point_value> <acquirable_name> ((<terrain_letter>,)*<terrain_letter>)?

ACQUIRABLE is the literal string ACQUIRABLE

<point_value> is the amount of points needed to recruit the Acquirable
<acquirable_name> is the name of the Creature to consider as an Acquirable
<terrain_letter> is an (optional) comma-separated list of terrain
letter (see above) that restrict the availability of the Acquirable.
If the list is ommited, the Acquirable can be recruited everywhere.

Note that all <point_value> must be even multiple of the first
<point_value> ; other values are erroneous and will be flagged
as such. Also, the first acquirable creature should be a Lord,
and is recruited in the starting stack (it's the 'primary'
acquirable creature.

Multiple line can be present, in which case, the behavior is
the same as if all the Acquirable where on one line. Order of
Acquirable is not important, except for the first one, which
defines the reference for <point_value> and the primary
acquirable creature.

3) CRE file format (default file used: Default/Default.cre)

This file define the Colossus Creatures ; it's composed
of a succession of lines:

<name> <power> <skill>
<rangestrikes> <flies>
<nativeBramble> <nativeDrift> <nativeBog> <nativeSandDune> <nativeSlope>
<nativeVolcano> <waterDwelling> <magicMissile>
<lord> <demilord>
<maxCount>
<pluralName>

all on one line.

<name> is the display name of the creature

<power> and <skill> are the numeric value of power and skill respectively.
<rangestrikes> <and flies> are boolean values ('true' or 'false'),
 defining if the creature can rangestrike or fly respectively.
<nativeXXX> are boolean values defining if the creature is
 native for terrain type XXX.
<waterDwelling> is a boolean value defining if the creature
 can live in water (i.e., Bog or Lake). Water Dweller don't
 like being dry, and as such take damage in Sand as other
 Creatures do in Drift.
<magicMissile> is a boolean value defining if the creature
 use magic missile, i.e. it can fires through anything
 (foe, obstacle, ...) toward anyone (including lord).
<lord> and <demilord> are boolean values, defining if the creature
 is a lord or a demilord (mutually exclusive).
<maxCount> is the max number of creature in the caretaker stack.
<pluralName> is the same as name, just plural.

Warning: You _must_ have an Angel and an Archangel in the file,
as for the moments they're recruited by name.

4) Battleland file format (files used: by terrain name under Battlelands)

These files define the Colossus Battlelands. they're composed
of a succession of lines:

<X_pos> <Y_pos> <terrain_type> <terrain_elevation> (<border_number> <border_type>)*

all on one line.

Any cas not mentioned in this file is assumed to be of type 'p',
at elevation '0', and no border.

<X_pos> and <Y_pos> are the X and Y position of the modified case.

<terrain_type> is the terrain type of the case ; it's currently
one of: p, r, s, t, o, v, d, w, l (Plain, bRamble, Sand, Tree, bOg, Volcano, Drift, toWer, Lake)

<terrain_elevation> is the altitude of the terrain (between 0 and 2)

finally. between 0 and 6 pair of the form <border_number> <border_type>,
where <border_number> is between 0 and 5 and <bordet_type> is currently
one of: d, c, s, w (Dune, Cliff, Slope, Wall).

Note: Theres' a graphical tools, "BattlelandsBuilder", designed
to allow easy creations of Battlelands; see
"docs/datatools/README.BattlelandsBuilder"

5) VAR file format (default file used: Default/Default.var)

This file contains a variant definition, i.e. which
MAP, CRE and TER file should be used and other informations
such as which other variants are required.

Four different lines can exist, in any number and order
(only the last one of each type is used):

CRE:<cre_filename>
MAP:<map_filename>
TER:<ter_filename>
DEPEND:<comma-separated list of dependecies>

Note: if one of the  first three type is missing, the Default
file is implied. if DEPEND is missing, no dependecies are implied.
In all case, the "Default" directory is looked-up last, so
mentioning "Default" as a dependency is not required.

# Exemple: A variant that use creatures from ExtTitan, Battlelands from
# Badlands and a local map could be described as:
# CRE:ExtTitan.cre
# MAP:MyBadlandsExtTitan.map
# TER:Badlands.ter
# DEPEND:ExtTitan,Badlands

6) Images files under "images"

# Chit (i.e. images representing a Creature) should be non-transparent
GIF file, size 60 * 60 (other size may work but won't look as nice). 
They should be named after the Creature they represent, with a '.gif'
extension. If the file doesn't exist, troubles may occur.

# Graphical Overlay for the Hexes on the Masterboard should be
transparent GIF file, of size whatever-you-want (they are resized
to the same size as the Hex the represent). Default supplied
files are 255x255. Use them as examples of what is possible to do.
If the file doesn't exist, the non-overlayed display is used
instead (i.e. name of the terrain and the label in the proper
corner).

Two version of the file should be supplied, one with and one without
the '_i' postfix to the name (i.e 'MyTerrain.gif' and 'MyTerrain_i.gif').
The first is used when the biggest part of the hexagon is down,
the second when the biggest part is up. The Display Name (see
above, "TER file format") is used if present, and Name is used
if not.

# Graphical overlay for the Hexes on the Battlelands (aka
Hazard) should be transparent GIF file, of size 216x188
for the interior of the hexes (Bog, Sand...), and size 248x220
for the hexsides (Cliff, Slope...). The filename should the name
of the hazard followed by '_Hazard', followed by the extension
'.gif' (for instance "MySea_Hazard.gif"). Only one version
is needed.

Other sizes _may_ work (they are resized on-the-fly), and odds are
better if the aspect ratio is the same.
