Big picture:
1. Fix bugs with client-side AI.
2. Add split prediction.
3. Refactor to eliminate duplicate code.
4. Improve networking.  (Persistent servers, reporting game openings to web
   page.)
5. Improve AI.  (Group battle moves.)


Bug: Failing LOSTest -- problems with slopes and cliffs.

Bug: AI needs to set donor, enter angel when summoning into battle.

Bug: Need to detect failed AI battle moves and fall back to next choice.

Bug?: Attacking, conceded to AI after map up but before entering, and
   AI did not reinforce.  Check rules.

Bug: Concede dialog has top legion skewed slightly to right of bottom legion.

Bug: Hang after illegal carry attempt.
Battle phase advances to Fight
Angel takes Hex damage
Called ai.strike() for Bu02
Best target is Warbear in E4
Best attacker is Troll in E3
From client Blue: strike ~ 72 ~ A1
Titan in B1 strikes Angel in Drift hex A1 with strike number 4 : 225351: 2 hits
Called ai.strike() for Bu02
Best target is Warbear in E4
Best attacker is Troll in E3
From client Blue: strike ~ 99 ~ E4
added carry target Ogre in Plains hex D4
Troll in E3 strikes Warbear in Drift hex E4 with strike number 5 : 41266524: 3 hits
1 carry available
From client Blue: strike ~ 99 ~ E4
Removed extra strike2() call for Troll in Plains hex E3
From client Blue: applyCarries ~ D4
Warn: Tried illegal carry to Ogre in Plains hex D4


When getting both a PickRecruit and an AcquireAngel after a battle,
   make sure the PickRecruit is on top, because it's modal.
   Or make PickRecruit non-modal.

Colorize chat window.
Colorize StatusScreen.

Observer clients.

Sometimes refuse remote newGame/loadGame/saveGame calls?

Cleanup network shutdown -- when game over or player eliminated, don't
   whine if its client drops.

Eliminate LegionInfo, PlayerInfo, Strike, Movement and instead use
   slightly different versions of Game, Legion, Player, Battle, etc. 
   on client side.

Set Client movementRoll when loading during movement phase after roll.
Set which legions have recruited when loading during recruit phase.

Use SF project releases.

Change Quit button in GetPlayers dialog to Cancel.  Go back to existing 
   game if there is one from Cancel, or quit if just starting.  Eliminate
   confirmation before calling dialog.

L&F menu should indicate current L&F somehow, and not show Windows if not
   allowed on this platform.
If player chose L&F from config file, it should be added to menu.
Kunststoff L&F in swing.properties file fails.  Works in player cfg file.
Add Kunststoff L&F to jar file?

Add explicit cancel buttons to more dialogs.  (PickRecruit)

Add "no 2s or 5s" mulligan option.
Add optional additional handicap mulligans that can be used after turn 1.

Add UI for players to specify favorite colors.

Put old, new web pages under CVS.
Switch to new web page.

Include a Colossus.ico file for Windows.

ShowLegion on mouseover, not click, with permanent dialog.

Highlight appropriate engagement hex while engagement is being resolved.
   (Except during angel summoning.)

Optional post-engagement status dialog.

Add confirm dialogs (for conceding with titan, skipping recruits, ...)

Make BattleMap less tall.
Highlight entrances somehow.  Maybe use fixed boxes with an arrow to
   show entry side, instead of cascading.

Add display of dead creatures / total creatures / creatures in play to
   CreatureCollectionView, and some way to toggle between these values.

Write more design docs.

Add SetupBattle dialog, to allow setting up standalone battles.  
   (terrain, entry side, creatures in attacking and defending legions,
   angel/archangel available to summon, recruits available for terrain
   type, player scores for titan power.)

Add a ShowLegionMarkers window that shows each player's remaining 
   legion markers.

Show StatusScreen and ShowLegion info in the masterboard window, rather 
   than in separate windows.

Special-case less fear of initial 8-high enemy legions, to make AI move
   both legions out of tower in turn 1.

Improve mapping of terrain types, creature nativity, and creature
   recruiting potential so that the AI can easily take these into
   account.

Add movement and recruit animation.  Requires returning full paths for
   moves, not just destination hex.
